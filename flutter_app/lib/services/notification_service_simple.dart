import 'package:onesignal_flutter/onesignal_flutter.dart';
import 'package:flutter/foundation.dart';

class NotificationServiceSimple {
  static const String _appId = "d98be3fd-e812-47ea-a075-bca9a16b4f6b";
  
  static Future<void> initialize() async {
    debugPrint('üîî [NotificationService] Initialisation OneSignal (version simple)...');
    
    try {
      // Configuration OneSignal basique
      OneSignal.Debug.setLogLevel(OSLogLevel.verbose);
      OneSignal.initialize(_appId);
      
      // Demande de permission
      //await requestPermission();
      OneSignal.Notifications.requestPermission(false);
      
      // Configuration des √©v√©nements de base
      _setupBasicEventListeners();
      
      debugPrint('‚úÖ [NotificationService] OneSignal initialis√© avec succ√®s (version simple)');
    } catch (e) {
      debugPrint('‚ùå [NotificationService] Erreur d\'initialisation: $e');
    }
  }
  
  static Future<void> requestPermission() async {
    try {
      debugPrint('üì± [NotificationService] Demande de permission...');
      
      final permission = await OneSignal.Notifications.requestPermission(true);
      debugPrint('üì± [NotificationService] Permission accord√©e: $permission');
    } catch (e) {
      debugPrint('‚ùå [NotificationService] Erreur permission: $e');
    }
  }
  
  static void _setupBasicEventListeners() {
    try {
      // Notification re√ßue
      OneSignal.Notifications.addForegroundWillDisplayListener((event) {
        debugPrint('üîî [NotificationService] Notification re√ßue: ${event.notification.title}');
        
        // Afficher la notification
        event.preventDefault();
        event.notification.display();
      });
      
      // Notification cliqu√©e
      OneSignal.Notifications.addClickListener((event) {
        debugPrint('üëÜ [NotificationService] Notification cliqu√©e: ${event.notification.title}');
        
        // G√©rer l'URL si pr√©sente
        final data = event.notification.additionalData;
        if (data != null && data.containsKey('url')) {
          debugPrint('üîó [NotificationService] URL trouv√©e: ${data['url']}');
        }
      });
      
      debugPrint('‚úÖ [NotificationService] Event listeners configur√©s (version simple)');
    } catch (e) {
      debugPrint('‚ùå [NotificationService] Erreur configuration listeners: $e');
    }
  }
  
  static Future<String?> getUserId() async {
    try {
      final userId = OneSignal.User.getOnesignalId();
      debugPrint('üë§ [NotificationService] User ID: $userId');
      return userId;
    } catch (e) {
      debugPrint('‚ùå [NotificationService] Erreur getUserId: $e');
      return null;
    }
  }
  
  static void setExternalUserId(String userId) {
    try {
      OneSignal.login(userId);
      debugPrint('üë§ [NotificationService] External User ID d√©fini: $userId');
    } catch (e) {
      debugPrint('‚ùå [NotificationService] Erreur setExternalUserId: $e');
    }
  }
} 